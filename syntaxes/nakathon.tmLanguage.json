{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "Nakathon",
    "patterns": [
        {
            "include": "#comments"
        },
        {
            "include": "#keywords"
        },
        {
            "include": "#strings"
        },
        {
            "include": "#numbers"
        },
        {
            "include": "#bools_and_null"
        },
        {
            "include": "#operators"
        },
        {
            "include": "#conditional_operators"
        },
        {
            "include": "#built_in_functions"
        }
    ],
    "repository": {
        "comments": {
            "patterns": [
                {
                    "name": "comment.line.number-sign.nakathon",
                    "match": "#.*$"
                }
            ]
        },
        "keywords": {
            "patterns": [
                {
                    "name": "keyword.control.nakathon",
                    "match": "\\b(if|elseif|else|while|for|return|continue|break|then|end|var|const|temp|func|not)\\b"
                }
            ]
        },    
        "strings": {
            "name": "string.quoted.double.nakathon",
            "begin": "\"",
            "end": "\"",
            "patterns": [
                {
                    "name": "constant.character.escape.nakathon",
                    "match": "\\\\(\\\"|\\\n|\\\t)"
                }
            ]
        },
        "numbers": {
            "name": "constant.numeric.nakathon",
            "match": "\\b\\d+(\\.\\d+)?\\b"
        },
        "bools_and_null": {
            "patterns": [
                {
                    "name": "keyword.bools_null.nakathon",
                    "match": "\\b(true|false|null)\\b"
                }
            ]
        }, 
        "operators": {
            "patterns": [
                {
                    "name": "keyword.operator.math.nakathon",
                    "match": "\\+|-|\\*|/|\\*\\*|%"
                }
            ]
        },
        "conditional_operators": {
            "patterns": [
                {
                    "name": "keyword.operator.comparison.nakathon",
                    "match": "==|!=|<=|>=|<|>|&&|\\|\\|"
                }
            ]
        },
        "built_in_functions": {
            "patterns": [
                {
                    "name": "constant.function.builtin.nakathon",
                    "match": "\\b(Print|Clear)\\b"
                }
            ]
        }
    },
    "scopeName": "source.nkt"
}
