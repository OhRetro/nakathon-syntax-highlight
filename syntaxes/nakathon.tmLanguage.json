{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "Nakathon",
    "patterns": [
        { "include": "#comments" },
        { "include": "#keywords" },
        { "include": "#strings" },
        { "include": "#numbers" },
        { "include": "#operators" }
    ],
    "repository": {
        "comments": {
            "patterns": [
                {
                    "name": "comment.line.nakathon",
                    "match": "#.*$"
                }
            ]
        },
        "keywords": {
            "patterns": [
                {
                    "name": "keyword.nakathon",
                    "match": "\\b(while|for|return|continue|break|then|end)\\b"
                },
                {
                    "name": "keyword.control.nakathon",
                    "match": "\\b(if|elseif|else)\\b"
                },
                {
                    "name": "entity.other.attribute-name.nakathon",
                    "match": "\\b(var|const|temp|local|func)\\b"
                },
                {
                    "name": "entity.name.type",
                    "match": "\\b(Value|String|Number|List|Boolean|Null|Function)\\b"
                },
                {
                    "name": "constant.language.nakathon",
                    "match": "\\b(true|false|null)\\b"
                },
                {
                    "name": "entity.name.function.nakathon",
                    "match": "\\b[A-Za-z_][A-Za-z0-9_]*\\s*\\("
                }
            ]
        },  
        "strings": {
            "patterns": [
                {
                    "name": "string.nakathon",
                    "begin": "\"",
                    "end": "\"",
                    "patterns": [
                        {
                            "name": "constant.character.escape.nakathon",
                            "match": "\\\\\""
                        },
                        {
                            "name": "constant.character.escape.nakathon",
                            "match": "\\\\(n|t)"
                        }
                    ]
                }
            ]
        },
        "numbers": {
            "name": "constant.numeric.nakathon",
            "match": "\\b\\d+(\\.\\d+)?\\b"
        },
        "operators": {
            "patterns": [
                {
                    "name": "operator.math.nakathon",
                    "match": "\\+|-|\\*|/|\\*\\*|%"
                },
                {
                    "name": "keyword.operator.nakathon",
                    "match": "not|==|!=|<=|>=|<|>|&&|\\|\\|"
                }
            ]
        }
    },
    "scopeName": "source.nkt"
}
